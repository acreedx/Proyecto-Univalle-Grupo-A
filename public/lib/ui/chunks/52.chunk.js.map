{"version":3,"sources":["webpack:///./src/ui/src/components/ContentEditLinkModal/ContentEditLinkModal.js","webpack:///./src/ui/src/components/ContentEditLinkModal/ContentEditLinkModalContainer.js","webpack:///./src/ui/src/components/ContentEditLinkModal/index.js"],"names":["ContentEditLinkModal","closeModal","addLinkHandler","existingLink","useState","url","setURL","t","useTranslation","addURLLink","DataElementWrapper","className","data-element","DataElements","CONTENT_EDIT_LINK_MODAL","onMouseDown","e","stopPropagation","onSubmit","value","autoFocus","onChange","target","Button","dataElement","label","onClick","ContentEditLinkModalContainer","useSelector","state","selectors","isElementOpen","getContentBoxEditor","isOpen","contentBoxEditor","dispatch","useDispatch","existingLinkUrl","hyperlink","useCallback","actions","closeElement","blur","addLink","insertHyperlink"],"mappings":"mwCAQA,IAyCeA,EAzCc,SAAH,GAIpB,IAHJC,EAAU,EAAVA,WACAC,EAAc,EAAdA,eACAC,EAAY,EAAZA,aAE4C,IAAtBC,mBAASD,GAAa,GAArCE,EAAG,KAAEC,EAAM,KACXC,EAAqB,EAAhBC,cAAgB,GAApB,GAEFC,EAAa,WACjBP,EAAeG,GACfJ,KAGF,OACE,kBAACS,EAAA,EAAkB,CACjBC,UAAU,kBACVC,eAAcC,IAAaC,wBAC3BC,YAAad,GAEb,yBAAKU,UAAU,YAAYI,YAAa,SAACC,GAAC,OAAKA,EAAEC,oBAC/C,0BAAMC,SAAUT,GACd,6BAAMF,EAAE,kBACR,yBAAKI,UAAU,aACb,2BACEA,UAAU,WACVQ,MAAOd,EACPe,WAAS,EACTC,SAAU,SAACL,GAAC,OAAKV,EAAOU,EAAEM,OAAOH,UAEnC,kBAACI,EAAA,EAAM,CACLC,YAAY,mBACZC,MAAOlB,EAAE,eACTmB,QAASjB,S,ojCCjCvB,IAiCekB,EAjCuB,WACpC,IAME,IAHEC,aAAY,SAACC,GAAK,MAAK,CACzBC,IAAUC,cAAcF,EAAOhB,IAAaC,yBAC5CgB,IAAUE,oBAAoBH,OAC9B,GALAI,EAAM,KACNC,EAAgB,KAMZC,EAAWC,cAEbC,EAAkB,GAClBH,IACFG,EAAkBH,EAAiBI,WAGrC,IAAMrC,EAAasC,uBAAY,WAC7BJ,EAASK,IAAQC,aAAa5B,IAAaC,0BACvCoB,GACFA,EAAiBQ,SAElB,CAACR,IAEES,EAAUJ,uBAAY,SAAClC,GACvB6B,IACFA,EAAiBU,gBAAgBvC,GACjC6B,EAAiBQ,UAElB,CAACR,IAEJ,OAAOD,EAAU,kBAAC,EAAoB,CAAChC,WAAYA,EAAYC,eAAgByC,EAASxC,aAAckC,IAAuB,MCnChHrC","file":"chunks/52.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Button from 'components/Button';\r\nimport DataElements from 'constants/dataElement';\r\nimport DataElementWrapper from 'components/DataElementWrapper';\r\n\r\nimport '../LinkModal/LinkModal.scss';\r\n\r\nconst ContentEditLinkModal = ({\r\n  closeModal,\r\n  addLinkHandler,\r\n  existingLink,\r\n}) => {\r\n  const [url, setURL] = useState(existingLink);\r\n  const [t] = useTranslation();\r\n\r\n  const addURLLink = () => {\r\n    addLinkHandler(url);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <DataElementWrapper\r\n      className=\"Modal LinkModal\"\r\n      data-element={DataElements.CONTENT_EDIT_LINK_MODAL}\r\n      onMouseDown={closeModal}\r\n    >\r\n      <div className=\"container\" onMouseDown={(e) => e.stopPropagation()}>\r\n        <form onSubmit={addURLLink}>\r\n          <div>{t('link.enterurl')}</div>\r\n          <div className=\"linkInput\">\r\n            <input\r\n              className=\"urlInput\"\r\n              value={url}\r\n              autoFocus\r\n              onChange={(e) => setURL(e.target.value)}\r\n            />\r\n            <Button\r\n              dataElement=\"linkSubmitButton\"\r\n              label={t('action.link')}\r\n              onClick={addURLLink}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </DataElementWrapper>\r\n  );\r\n};\r\n\r\nexport default ContentEditLinkModal;","import React, { useCallback } from 'react';\r\nimport ContentEditLinkModal from './ContentEditLinkModal';\r\nimport selectors from 'selectors';\r\nimport DataElements from 'constants/dataElement';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from 'src/redux/actions';\r\n\r\nconst ContentEditLinkModalContainer = () => {\r\n  const [\r\n    isOpen,\r\n    contentBoxEditor,\r\n  ] = useSelector((state) => [\r\n    selectors.isElementOpen(state, DataElements.CONTENT_EDIT_LINK_MODAL),\r\n    selectors.getContentBoxEditor(state),\r\n  ]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  let existingLinkUrl = '';\r\n  if (contentBoxEditor) {\r\n    existingLinkUrl = contentBoxEditor.hyperlink;\r\n  }\r\n\r\n  const closeModal = useCallback(() => {\r\n    dispatch(actions.closeElement(DataElements.CONTENT_EDIT_LINK_MODAL));\r\n    if (contentBoxEditor) {\r\n      contentBoxEditor.blur();\r\n    }\r\n  }, [contentBoxEditor]);\r\n\r\n  const addLink = useCallback((url) => {\r\n    if (contentBoxEditor) {\r\n      contentBoxEditor.insertHyperlink(url);\r\n      contentBoxEditor.blur();\r\n    }\r\n  }, [contentBoxEditor]);\r\n\r\n  return isOpen ? (<ContentEditLinkModal closeModal={closeModal} addLinkHandler={addLink} existingLink={existingLinkUrl} />) : null;\r\n};\r\n\r\nexport default ContentEditLinkModalContainer;","import ContentEditLinkModal from './ContentEditLinkModalContainer';\r\n\r\nexport default ContentEditLinkModal;"],"sourceRoot":""}